import { markInputRule, markPasteRule } from '@tiptap/core';
import highlight from '@tiptap/extension-highlight';
import markdownitMark from 'markdown-it-mark';

const INPUT_REGEX = /(?:^|[^=])(==(?!\s+==)([^=]+)==)$/;
const PASTE_REGEX = /(?:^|[^=])(==(?!\s+==)([^=]+)==(?!\s+==))/g;

const HighlightExtension = highlight.extend({
  addOptions() {
    return {
      ...this.parent?.(),
      HTMLAttributes: {
        class: 'markdown-editor-highlight'
      }
    };
  },
  addStorage() {
    return {
      markdown: {
        serialize: {
          open: '==',
          close: '=='
        },
        parse: {
          setup(markdownit) {
            markdownit.use(markdownitMark);
          },
          updateDOM() {
            // here you can update HTML generated by markdown-it
          }
        }
      }
    };
  },
  addInputRules() {
    return [
      markInputRule({
        find: INPUT_REGEX,
        type: this.type
      })
    ];
  },
  addPasteRules() {
    return [
      markPasteRule({
        find: PASTE_REGEX,
        type: this.type
      })
    ];
  }
});

export default HighlightExtension;
